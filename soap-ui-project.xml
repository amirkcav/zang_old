<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="7229180b-8684-4adb-99b5-f7ae99b025a2" activeEnvironment="Default" name="ZANG_OLD" resourceRoot="" soapui-version="5.4.0" abortOnError="false" runType="SEQUENTIAL" defaultScriptLanguage="Groovy" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:restMockService id="49d6fb96-dd89-427e-a3fa-d06e2e2603f5" port="8081" path="/" host="fedorapc.cav.local" name="ZANG REST MockService" docroot=""><con:settings/><con:properties/><con:restMockAction name="mcall" method="POST" resourcePath="/mcall" id="efa4586b-3af3-49cf-ac86-17a7c04d089d"><con:settings/><con:defaultResponse>FORMA</con:defaultResponse><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>def queryString = mockRequest.getRequest().getQueryString()
def label = queryString.split('_LABEL=')[1].split('&amp;')[0]

def requestBody = mockRequest.getRequestContent()
def jsonSlurper = new groovy.json.JsonSlurper()
def req = jsonSlurper.parseText(requestBody);
def name = req[label]
if (label == 'GRIDDATA') {
	name = req['GRID']
}
else if (label == 'AUTOCOMP') {
	name = req['FIELD']
}
else if (label == 'VALIDATE') {
	name = ''
}
else if (label == 'SAVE') {
	name = req['FORM']
}
else if (label == 'GETAPPS') {
	name = req['KEY']
}

log.info label + name

return label + name
</con:dispatchPath><con:response name="FORMA" id="ec4ccbf6-1d89-4f8b-9932-25e6e25e595f" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{"data":{"questions":[{"class":"TextboxQuestion","key":"emailAddress","label":"Email Address","order":2,"type":"email","value":"me1@example.com"},{"class":"TextboxQuestion","key":"name","label":"Name. Can't contain 'XXX'. If it has a space character, the email address is set","order":1,"value":"John Doe"},{"class":"TextboxQuestion","key":"age","label":"Age","order":3,"type":"number","value":33},{"class":"TextboxQuestion","key":"actualAge","label":"Actual age (invisible)","order":3,"type":"number","value":33,"visible":false}]},"message":null,"status":"ok"}
</con:responseContent></con:response><con:response name="FORMB" id="2a60fc28-2c8a-41dc-a131-de6a78522d97" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{"data":{"questions":[{"class":"DropdownQuestion","key":"title","label":"Title","options":[{"key":"mr","value":"Mr."},{"key":"mrs","value":"Mrs."},{"key":"ms","value":"Ms."}],"order":1},{"class":"TextboxQuestion","key":"dob","label":"Date of Birth","order":2,"type":"date","value":"2000-01-02"},{"class":"TextboxQuestion","key":"emailAddress","label":"Email Address, read only","order":3,"readonly":true,"type":"email","value":"readonly@example.com"},{"class":"AutoCompleteQuestion","key":"word","label":"Dictionary Word, with auto-complete","order":4}]},"message":null,"status":"ok"}
</con:responseContent></con:response><con:response name="FORMC" id="777815b8-a8fa-4b8c-93d9-2090cad9dfd3" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{"data":{"questions":[{"class":"TextboxQuestion","key":"emailAddress","label":"Email Address","order":2,"type":"email","value":"me1@example.com"},{"class":"TextboxQuestion","key":"name","label":"Name. Can't contain 'XXX'. If it has a space character, the email address is set","order":1,"value":"John Doe"},{"class":"TextboxQuestion","key":"age","label":"Age","order":3,"type":"number","value":33},{"class":"TextboxQuestion","key":"actualAge","label":"Actual age (invisible)","order":3,"type":"number","value":33,"visible":false}]},"message":null,"status":"ok"}
</con:responseContent></con:response><con:response name="FORMD" id="f7fb4989-1d82-45e7-9d3e-aaddb09e9ff1" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{"data":{ "formTitle": "Form title from server", "questions": [{"class":"DropdownQuestion","key":"title","label":"Title","options":[{"key":"123","value":"123"},{"key":"444","value":"444"},{"key":"919","value":"919"},{"key":"5677","value":"5677"},{"key":"2345","value":"2345"}],"order":1},{"class":"TextboxQuestion","key":"dob","label":"Date of Birth","order":2,"type":"date","value":"2000-01-02"},
{"class":"TextboxQuestion","key":"emailAddress","label":"Email Address, read only","order":3,"readonly":true,"type":"email","value":"readonly@example.com"},
{"class":"AutoCompleteQuestion","key":"word","label":"Dictionary Word, with auto-complete","order":4},{"class":"TextareaQuestion","key":"text","label":"Text area","order":4,"type":"text"}, {"class":"TextboxQuestion","key":"checkbox","label":"Checkbox","order":5,"type":"checkbox"}] },"message":null,"status":"ok"}</con:responseContent></con:response><con:response name="FORME" id="fc3c6f65-a105-422c-a3da-34473704aed0" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{"data": {"questions": [{"class":"FileUpload","key":"file","label":"File upload","order":1,"value":null},{"class":"FileUpload","key":"image","label":"Image upload","order":2,"useCamera":true,"value":null},{"alt":"Alt text","class":"Image","key":"image","label":"Do we need image label?","order":3,"url":"http:\/\/max.cav.local\/cav\/icons\/cav_logo_he.png"},{"class":"Button","key":"button4","label":"Click me","order":4},{"class":"Button","cssClass":"danger","key":"button5","label":"Danger!","order":5},{"class":"Button","cssClass":"success","key":"button6","label":"Success","order":6}]},"message":null,"status":"ok"}
</con:responseContent></con:response><con:response name="GRIDA" id="d86754fc-9282-447d-8543-398fbcfc38cc" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{"data":{"class":"material","columns":[
  {"id":"col1","field":"col1","minWidth":100,"name":"Column #1","width":100},
  {"id":"col2","field":"col2","minWidth":100,"name":"Column #2","width":100},
  {"id":"col3","field":"col3","minWidth":100,"name":"Column #3","width":100},
  {"id":"col4","field":"col4","minWidth":100,"name":"Column #4","width":100,"type":"date"},
  {"id":"col5","field":"col5","minWidth":100,"name":"Column #5","width":100,"type":"checkbox"},
  {"id":"col6","field":"col6","minWidth":100,"name":"Actions","width":100,"type":"buttons","buttons":[{ "type": "edit" }, { "type": "delete", "icon": "remove" }]}
],"footerHeight":50,"limit":5,"scrollbarH":false,"scrollbarV":false},"message":null,"status":"ok"}
</con:responseContent></con:response><con:response name="GRIDDATAA" id="b2c08d6a-ab83-463a-b7b5-404bfc592bca" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{"data":[
  {"id":{"value":1} ,"col1":{"value":112},"col2":{"value":94,"style":{"background":"yellow"} },"col3":{"value":133},"col4":{"value":"22/07/2018"},"col5":{"value":true} },
  {"id":{"value":2} ,"col1":{"value":985},"col2":{"value":439},"col3":{"value":428},"col4":{"value":"02/09/2018"},"col5":{"value":true} },
  {"id":{"value":3} ,"col1":{"value":187},"col2":{"value":322},"col3":{"value":343},"col4":{"value":"10/10/2018"},"col5":{"value":false}},
  {"id":{"value":4} ,"col1":{"value":317},"col2":{"value":93 },"col3":{"value":682},"col4":{"value":"22/07/2019"},"col5":{"value":false}},
  {"id":{"value":5}, "style":{"background":"#efe"} ,"col1":{"value":575},"col2":{"value":832},"col3":{"value":257},"col4":{"value":"22/07/2018"},"col5":{"value":false}},
  {"id":{"value":6} ,"col1":{"value":962},"col2":{"value":561},"col3":{"value":766},"col4":{"value":"24/07/2018","style":{"color":"blue"}},"col5":{"value":true} },
  {"id":{"value":7} ,"col1":{"value":506},"col2":{"value":399},"col3":{"value":397},"col4":{"value":"22/11/2017","style":{"color":"green"}},"col5":{"value":false}},
  {"id":{"value":8} ,"col1":{"value":219},"col2":{"value":48 },"col3":{"value":569},"col4":{"value":"29/12/2018"},"col5":{"value":true} },
  {"id":{"value":9} ,"col1":{"value":153},"col2":{"value":278},"col3":{"value":646},"col4":{"value":"10/07/2019"},"col5":{"value":false}},
  {"id":{"value":10},"col1":{"value":942},"col2":{"value":600},"col3":{"value":587},"col4":{"value":"01/01/2000"},"col5":{"value":true} }
],"message":null,"status":"ok"}</con:responseContent></con:response><con:response name="VALIDATE" id="447e166e-bf83-4c00-b139-80678c0986fb" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:script><![CDATA[def requestBody = mockRequest.getRequestContent()
def jsonSlurper = new groovy.json.JsonSlurper()
def req = jsonSlurper.parseText(requestBody);

//log.info req

// inline edit grid
if (req.VALUE == true || req.VALUE == false) {
	context.status = true;
}
else if (!(req.VALUE instanceof String)) {
	context.rowIndex = req.VALUE.rowIndex
	context.field = req.VALUE.field
	
	if (req.VALUE && req.VALUE.fieldType == 'number' && req.VALUE.value != null && 
	    req.VALUE.value.toString().isNumber() && (req.VALUE.value as double) < 100) {
		context.status = false;
		context.message = 'Value is smaller than 100!';
	}
	else {
		context.status = true;
	}
}
else {
	context.status = true;
}
]]></con:script><con:responseContent>{"data":{ "status":"ok", "isValid":"${status}","message":"${message}", "rowIndex": "${rowIndex}", "field": "${field}"},"message":"${message}","status":"ok"}</con:responseContent></con:response><con:response name="GRIDB" id="a594a2f9-9675-461d-9fda-4940ac72c844" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{"data":{"class":"material","columns":[{"id":"col1","field":"col1","minWidth":100,"name":"Column #1","width":50,"isEditable":true},{"id":"col2","field":"col2","minWidth":100,"name":"Column #2","width":50,"isEditable":true},{"id":"col3","field":"col3","minWidth":100,"name":"Column #3","width":50,"isEditable":true},{"id":"col4","field":"col4","minWidth":100,"name":"Column #4","width":50,"isEditable":true},{"id":"col5","field":"col5","minWidth":100,"name":"Column #5","width":50,"isEditable":true}, {"id":"col6","field":"col6","minWidth":100,"name":"Actions","width":100,"type":"buttons","buttons":["delete"]}],"footerHeight":50,"limit":5,"scrollbarH":false,"scrollbarV":false},"message":null,"status":"ok"}</con:responseContent></con:response><con:response name="GRIDDATAB" id="65c447f2-c9f4-4459-8968-d3e25ce3b86d" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{"data":[{"col1":112,"col2":94,"col3":133,"col4":621,"col5":643},{"col1":985,"col2":439,"col3":428,"col4":114,"col5":639},{"col1":187,"col2":322,"col3":343,"col4":647,"col5":404},{"col1":317,"col2":93,"col3":682,"col4":413,"col5":352},{"col1":575,"col2":832,"col3":257,"col4":494,"col5":49},{"col1":962,"col2":561,"col3":766,"col4":837,"col5":304},{"col1":506,"col2":399,"col3":397,"col4":849,"col5":90},{"col1":219,"col2":48,"col3":569,"col4":228,"col5":47},{"col1":153,"col2":278,"col3":646,"col4":237,"col5":27},{"col1":942,"col2":600,"col3":587,"col4":657,"col5":189}],"message":null,"status":"ok"}
</con:responseContent></con:response><con:response name="GRIDEDITABLE" id="4050170c-839a-4c95-9ece-100cb9f5ff02" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{"data":{"class":"material","columns":[
    {"id":"col1","field":"col1","type":"select","options": [{ "value":1 },{ "value":2 },{ "value":4 },{ "value":8 },{ "value":100 }],"minWidth":100,"name":"Dropdown","width":50,"isEditable":true},
    {"id":"col2","field":"col2","type":"checkbox","minWidth":100,"name":"Checkbox","width":50,"isEditable":true},
    {"id":"col3","field":"col3","type":"autocomplete","minWidth":100,"name":"Autocomplete","width":50,"isEditable":true},
    {"id":"col4","field":"col4","type":"number","minWidth":100,"name":"Column #4","width":50,"isEditable":true},
    {"id":"col5","field":"col5","type":"number","minWidth":100,"name":"Column #5","width":50,"isEditable":true}
],"footerHeight":50,"limit":5,"scrollbarH":false,"scrollbarV":false},"message":null,"status":"ok"}</con:responseContent></con:response><con:response name="GRIDDATAEDITABLE" id="fb9cbbc0-c458-48c0-8a57-75313ac47b5a" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{"data":[
    {"col1": { "value": 112, "options": [{ "value":1 },{ "value":2 },{ "value":4 },{ "value":8 },{ "value":100 }] },"col2": { "value": true },"col3": { "value": { "id": 1, "value": "ga" } },"col4": { "value": 621 },"col5": { "value": 643 } },
    {"col1": { "value": 985, "options": [{ "value":1 },{ "value":2 },{ "value":4 },{ "value":8 },{ "value":100 }] },"col2": { "value": false},"col3": { "value": { "id": 4, "value": "abcdefg" } },"col4": { "value": 114 },"col5": { "value": 639 } },
    {"col1": { "value": 187, "options": [{ "value":1 },{ "value":2 },{ "value":4 },{ "value":8 },{ "value":100 }] },"col2": { "value": true },"col3": { "value": { "id": 5, "value": "dddd" } },"col4": { "value": 647 },"col5": { "value": 404 } },
    {"col1": { "value": 317, "options": [{ "value":1 },{ "value":2 },{ "value":4 },{ "value":8 },{ "value":100 }] },"col2": { "value": false},"col3": { "value": { "id": 6, "value": "b" } },"col4": { "value": 413 },"col5": { "value": 352 } },
    {"col1": { "value": 575, "options": [{ "value":1 },{ "value":2 },{ "value":4 },{ "value":8 },{ "value":100 }] },"col2": { "value": true },"col3": { "value": { "id": 7, "value": "abc" } },"col4": { "value": 494 },"col5": { "value": 49  } },
    {"col1": { "value": 962, "options": [{ "value":1 },{ "value":2 },{ "value":4 },{ "value":8 },{ "value":100 }] },"col2": { "value": true },"col3": { "value": { "id": 8, "value": "AA123" } },"col4": { "value": 837 },"col5": { "value": 304 } },
    {"col1": { "value": 506, "options": [{ "value":1 },{ "value":2 },{ "value":4 },{ "value":8 },{ "value":100 }] },"col2": { "value": true },"col3": { "value": { "id": 9, "value": "gTTTTa" } },"col4": { "value": 849 },"col5": { "value": 90  } },
    {"col1": { "value": 219, "options": [{ "value":1 },{ "value":2 },{ "value":4 },{ "value":8 },{ "value":100 }] },"col2": { "value": true },"col3": { "value": { "id": 2, "value": "!@#$%^%^&amp;" } },"col4": { "value": 228 },"col5": { "value": 47  } },
    {"col1": { "value": 153, "options": [{ "value":1 },{ "value":2 },{ "value":4 },{ "value":8 },{ "value":100 }] },"col2": { "value": true },"col3": { "value": { "id": 3, "value": "XYZZXYZ" } },"col4": { "value": 237 },"col5": { "value": 27  } },
    {"col1": { "value": 942, "options": [{ "value":1 },{ "value":2 },{ "value":4 },{ "value":8 },{ "value":100 }] },"col2": { "value": true },"col3": { "value": { "id": 4, "value": "xxyyzz" } },"col4": { "value": 657 },"col5": { "value": 189 } }
],"message":null,"status":"ok"} </con:responseContent></con:response><con:response name="AUTOCOMPA" id="9ae28459-b691-4c26-9fde-9b93543e84d5" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{"data":{"status":"ok","values":[{"id":1,"value":"f"},{"id":2,"value":"f."},{"id":3,"value":"fa"},{"id":4,"value":"faade"},{"id":5,"value":"faailk"},{"id":6,"value":"fab"},{"id":7,"value":"fabaceous"},{"id":8,"value":"fabella"},{"id":9,"value":"fabes"},{"id":10,"value":"fabian"},{"id":11,"value":"fabiform"},{"id":12,"value":"fable"},{"id":13,"value":"fabled"},{"id":14,"value":"fabledom"},{"id":15,"value":"fable-framing"},{"id":16,"value":"fableist"},{"id":17,"value":"fableland"},{"id":18,"value":"fablemaker"},{"id":19,"value":"fablemonger"},{"id":20,"value":"fablemongering"}]},"message":null,"status":"ok"}
</con:responseContent></con:response><con:response name="FORMGRIDB" id="d1d49e0f-f7bb-4dec-87a9-3ab624bf1a28" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:script>def requestBody = mockRequest.getRequestContent()
def jsonSlurper = new groovy.json.JsonSlurper()
def req = jsonSlurper.parseText(requestBody);

//log.info req.PARAMS

def paramsStr = req.PARAMS.toString().replace('{', '').replace('}', '')
def arr = paramsStr.toString().split(/,|=/)
context.value1 = arr[1];
context.value2 = arr[3];
context.value3 = arr[5];
context.value4 = arr[7];
context.value5 = arr[9];</con:script><con:responseContent>{"data": {"questions": [
  { "class":"TextboxQuestion","key":"col1", "type":"number", "label":"Colomn 1", "order": 1, "value":"${value1}", "required": "true" },
  { "class":"TextboxQuestion","key":"col2", "type":"number", "label":"Colomn 2", "order": 2, "value":"${value2}" },
  { "class":"TextboxQuestion","key":"col3", "type":"number", "label":"Colomn 3", "order": 3, "value":"${value3}" },
  { "class":"TextboxQuestion","key":"col4", "type":"date", "label":"Date of Birth", "order":4, "value":"${value4}" },
  { "class":"TextboxQuestion","key":"col5", "type":"checkbox", "label":"Checkbox", "order": 5, "value":"${value5}" }
]},
"message":null,"status":"ok"}</con:responseContent></con:response><con:response name="SAVEGRIDB" id="103b384d-006d-48f9-a08d-1e095952adc9" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:script>def requestBody = mockRequest.getRequestContent()
def jsonSlurper = new groovy.json.JsonSlurper()
def req = jsonSlurper.parseText(requestBody);

log.info req.VALUES

def str = req.VALUES.toString().replace('{', '').replace('}', '')
def arr = str.toString().split(/,|=/)

context.value1 = arr[1];
context.value2 = arr[3];
context.value3 = arr[5];
context.value4 = arr[7];
context.value5 = arr[9];
//context.values = req.VALUES
//context.values = " { \"col1\": \"1\", \"col2\": \"2\", \"col3\": \"3\", \"col4\": \"4\", \"col5\": \"5\" } "</con:script><con:responseContent>{"data": { 
  "status":"ok", 
  "col1": {"value":"${value1}"},
  "col2": {"value":"${value2}"},
  "col3": {"value":"${value3}"},
  "col4": {"value":"${value4}"},
  "col5": {"value":"${value5}"}
},
"message":null,"status":"ok"}
</con:responseContent></con:response><con:response name="GETAPPSABC" id="045764c7-4ab3-4593-8fba-8f61eb1f4b7f" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"status": "ok", "message": "",
	"data": [
		{ "type": "grid", "key": "EDITABLE", "label": "Inline Editing" },
		{ "type": "grid", "key": "A", "label": "GRID" },
		{ "type": "form", "key": "A", "label": "Form A" }
	]	
}</con:responseContent></con:response></con:restMockAction><con:restMockAction name="mcall" method="OPTIONS" resourcePath="/mcall" id="86892af8-e2d0-4fa2-a7c5-2844f6baae17"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 1" id="5bd04efe-62da-4b22-900a-bed622feb8f0" httpResponseStatus="200"><con:settings/><con:responseContent/><con:header><con:name>Access-Control-Allow-Origin</con:name><con:value>*</con:value></con:header><con:header><con:name>Access-Control-Allow-Methods</con:name><con:value>GET, POST, OPTIONS</con:value></con:header></con:response></con:restMockAction></con:restMockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>