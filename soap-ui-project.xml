<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="7229180b-8684-4adb-99b5-f7ae99b025a2" activeEnvironment="Default" name="Project 1" resourceRoot="" soapui-version="5.4.0" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:restMockService id="49d6fb96-dd89-427e-a3fa-d06e2e2603f5" port="8080" path="/" host="fedorapc.cav.local" name="ZANG REST MockService"><con:settings/><con:properties/><con:restMockAction name="mcall" method="POST" resourcePath="/mcall" id="efa4586b-3af3-49cf-ac86-17a7c04d089d"><con:settings/><con:defaultResponse>FORMA</con:defaultResponse><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>def queryString = mockRequest.getRequest().getQueryString()
def label = queryString.split('_LABEL=')[1].split('&amp;')[0]

def requestBody = mockRequest.getRequestContent()
def jsonSlurper = new groovy.json.JsonSlurper()
def req = jsonSlurper.parseText(requestBody);
def name = req[label]
if (label == 'GRIDDATA') {
	name = req['GRID']
}
else if (label == 'VALIDATE') {
	name = ''
}

return label + name
</con:dispatchPath><con:response name="FORMA" id="ec4ccbf6-1d89-4f8b-9932-25e6e25e595f" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{"data":[{"class":"TextboxQuestion","key":"emailAddress","label":"Email Address","order":2,"type":"email","value":"me1@example.com"},{"class":"TextboxQuestion","key":"name","label":"Name. Can't contain 'XXX'. If it has a space character, the email address is set","order":1,"value":"John Doe"},{"class":"TextboxQuestion","key":"age","label":"Age","order":3,"type":"number","value":33},{"class":"TextboxQuestion","key":"actualAge","label":"Actual age (invisible)","order":3,"type":"number","value":33,"visible":false}],"message":null,"status":"ok"}
</con:responseContent></con:response><con:response name="FORMB" id="2a60fc28-2c8a-41dc-a131-de6a78522d97" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{"data":[{"class":"DropdownQuestion","key":"title","label":"Title","options":[{"key":"mr","value":"Mr."},{"key":"mrs","value":"Mrs."},{"key":"ms","value":"Ms."}],"order":1},{"class":"TextboxQuestion","key":"dob","label":"Date of Birth","order":2,"type":"date","value":"2000-01-02"},{"class":"TextboxQuestion","key":"emailAddress","label":"Email Address, read only","order":3,"readonly":true,"type":"email","value":"readonly@example.com"},{"class":"AutoCompleteQuestion","key":"word","label":"Dictionary Word, with auto-complete","order":4}],"message":null,"status":"ok"}
</con:responseContent></con:response><con:response name="FORMC" id="777815b8-a8fa-4b8c-93d9-2090cad9dfd3" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{"data":[{"class":"TextboxQuestion","key":"emailAddress","label":"Email Address","order":2,"type":"email","value":"me1@example.com"},{"class":"TextboxQuestion","key":"name","label":"Name. Can't contain 'XXX'. If it has a space character, the email address is set","order":1,"value":"John Doe"},{"class":"TextboxQuestion","key":"age","label":"Age","order":3,"type":"number","value":33},{"class":"TextboxQuestion","key":"actualAge","label":"Actual age (invisible)","order":3,"type":"number","value":33,"visible":false}],"message":null,"status":"ok"}
</con:responseContent></con:response><con:response name="FORMD" id="f7fb4989-1d82-45e7-9d3e-aaddb09e9ff1" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{"data":[
{"class":"DropdownQuestion","key":"title","label":"Title","options":[{"key":"mr","value":"Mr."},{"key":"mrs","value":"Mrs."},{"key":"ms","value":"Ms."}],"order":1},{"class":"TextboxQuestion","key":"dob","label":"Date of Birth","order":2,"type":"date","value":"2000-01-02"},
{"class":"TextboxQuestion","key":"emailAddress","label":"Email Address, read only","order":3,"readonly":true,"type":"email","value":"readonly@example.com"},
{"class":"AutoCompleteQuestion","key":"word","label":"Dictionary Word, with auto-complete","order":4},{"class":"TextareaQuestion","key":"text","label":"Text area","order":4,"type":"text"}],"message":null,"status":"ok"}
</con:responseContent></con:response><con:response name="FORME" id="fc3c6f65-a105-422c-a3da-34473704aed0" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{"data":[{"class":"FileUpload","key":"file","label":"File upload","order":1,"value":null},{"class":"FileUpload","key":"image","label":"Image upload","order":2,"useCamera":true,"value":null},{"alt":"Alt text","class":"Image","key":"image","label":"Do we need image label?","order":3,"url":"http:\/\/max.cav.local\/cav\/icons\/cav_logo_he.png"},{"class":"Button","key":"button4","label":"Click me","order":4},{"class":"Button","cssClass":"danger","key":"button5","label":"Danger!","order":5},{"class":"Button","cssClass":"success","key":"button6","label":"Success","order":6}],"message":null,"status":"ok"}
</con:responseContent></con:response><con:response name="GRIDA" id="d86754fc-9282-447d-8543-398fbcfc38cc" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{"data":{"class":"material","columns":[{"id":"col1","field":"col1","minWidth":100,"name":"Column #1","width":50},{"id":"col2","field":"col2","minWidth":100,"name":"Column #2","width":50},{"id":"col3","field":"col3","minWidth":100,"name":"Column #3","width":50},{"id":"col4","field":"col4","minWidth":100,"name":"Column #4","width":50},{"id":"col5","field":"col5","minWidth":100,"name":"Column #5","width":50}, {"id":"col6","field":"col6","minWidth":100,"name":"Actions","width":100,"type":"buttons","buttons":["delete"]}],"footerHeight":50,"limit":5,"scrollbarH":false,"scrollbarV":false},"message":null,"status":"ok"}</con:responseContent></con:response><con:response name="GRIDDATAA" id="b2c08d6a-ab83-463a-b7b5-404bfc592bca" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{"data":[{"col1":112,"col2":94,"col3":133,"col4":621,"col5":643},{"col1":985,"col2":439,"col3":428,"col4":114,"col5":639},{"col1":187,"col2":322,"col3":343,"col4":647,"col5":404},{"col1":317,"col2":93,"col3":682,"col4":413,"col5":352},{"col1":575,"col2":832,"col3":257,"col4":494,"col5":49},{"col1":962,"col2":561,"col3":766,"col4":837,"col5":304},{"col1":506,"col2":399,"col3":397,"col4":849,"col5":90},{"col1":219,"col2":48,"col3":569,"col4":228,"col5":47},{"col1":153,"col2":278,"col3":646,"col4":237,"col5":27},{"col1":942,"col2":600,"col3":587,"col4":657,"col5":189}],"message":null,"status":"ok"}
</con:responseContent></con:response><con:response name="VALIDATE" id="447e166e-bf83-4c00-b139-80678c0986fb" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{"data":{"status":"ok"},"message":null,"status":"ok"}</con:responseContent></con:response><con:response name="GRIDB" id="a594a2f9-9675-461d-9fda-4940ac72c844" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{"data":{"class":"material","columns":[{"id":"col1","field":"col1","minWidth":100,"name":"Column #1","width":50,"isEditable":true},{"id":"col2","field":"col2","minWidth":100,"name":"Column #2","width":50,"isEditable":true},{"id":"col3","field":"col3","minWidth":100,"name":"Column #3","width":50,"isEditable":true},{"id":"col4","field":"col4","minWidth":100,"name":"Column #4","width":50,"isEditable":true},{"id":"col5","field":"col5","minWidth":100,"name":"Column #5","width":50,"isEditable":true}, {"id":"col6","field":"col6","minWidth":100,"name":"Actions","width":100,"type":"buttons","buttons":["delete"]}],"footerHeight":50,"limit":5,"scrollbarH":false,"scrollbarV":false},"message":null,"status":"ok"}</con:responseContent></con:response><con:response name="GRIDDATAB" id="65c447f2-c9f4-4459-8968-d3e25ce3b86d" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{"data":[{"col1":112,"col2":94,"col3":133,"col4":621,"col5":643},{"col1":985,"col2":439,"col3":428,"col4":114,"col5":639},{"col1":187,"col2":322,"col3":343,"col4":647,"col5":404},{"col1":317,"col2":93,"col3":682,"col4":413,"col5":352},{"col1":575,"col2":832,"col3":257,"col4":494,"col5":49},{"col1":962,"col2":561,"col3":766,"col4":837,"col5":304},{"col1":506,"col2":399,"col3":397,"col4":849,"col5":90},{"col1":219,"col2":48,"col3":569,"col4":228,"col5":47},{"col1":153,"col2":278,"col3":646,"col4":237,"col5":27},{"col1":942,"col2":600,"col3":587,"col4":657,"col5":189}],"message":null,"status":"ok"}
</con:responseContent></con:response><con:response name="GRIDEDITABLE" id="4050170c-839a-4c95-9ece-100cb9f5ff02" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{"data":{"class":"material","columns":[{"id":"col1","field":"col1","minWidth":100,"name":"Column #1","width":50,"isEditable":true},{"id":"col2","field":"col2","minWidth":100,"name":"Column #2","width":50,"isEditable":true},{"id":"col3","field":"col3","minWidth":100,"name":"Column #3","width":50,"isEditable":true},{"id":"col4","field":"col4","minWidth":100,"name":"Column #4","width":50,"isEditable":true},{"id":"col5","field":"col5","minWidth":100,"name":"Column #5","width":50,"isEditable":true}],"footerHeight":50,"limit":5,"scrollbarH":false,"scrollbarV":false},"message":null,"status":"ok"}</con:responseContent></con:response><con:response name="GRIDDATAEDITABLE" id="fb9cbbc0-c458-48c0-8a57-75313ac47b5a" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{"data":[{"col1":112,"col2":94,"col3":133,"col4":621,"col5":643},{"col1":985,"col2":439,"col3":428,"col4":114,"col5":639},{"col1":187,"col2":322,"col3":343,"col4":647,"col5":404},{"col1":317,"col2":93,"col3":682,"col4":413,"col5":352},{"col1":575,"col2":832,"col3":257,"col4":494,"col5":49},{"col1":962,"col2":561,"col3":766,"col4":837,"col5":304},{"col1":506,"col2":399,"col3":397,"col4":849,"col5":90},{"col1":219,"col2":48,"col3":569,"col4":228,"col5":47},{"col1":153,"col2":278,"col3":646,"col4":237,"col5":27},{"col1":942,"col2":600,"col3":587,"col4":657,"col5":189}],"message":null,"status":"ok"}
</con:responseContent></con:response></con:restMockAction><con:restMockAction name="mcall" method="OPTIONS" resourcePath="/mcall" id="86892af8-e2d0-4fa2-a7c5-2844f6baae17"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 1" id="5bd04efe-62da-4b22-900a-bed622feb8f0" httpResponseStatus="200"><con:settings/><con:responseContent/><con:header><con:name>Access-Control-Allow-Origin</con:name><con:value>*</con:value></con:header><con:header><con:name>Access-Control-Allow-Methods</con:name><con:value>GET, POST, OPTIONS</con:value></con:header></con:response></con:restMockAction></con:restMockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>